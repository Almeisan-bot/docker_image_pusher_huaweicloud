name: Docker to HuaweiCloud SWR

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  HUAWEICLOUD_REGISTRY: "${{ secrets.HW_REGISTRY }}"          # 华为云仓库地址
  HUAWEICLOUD_ORG_NAME: "${{ secrets.HW_ORG_NAME }}"          # 华为云仓库名称
  HUAWEICLOUD_USER: "${{ secrets.HW_REGISTRY_USER }}"         # 华为云用户名
  HUAWEICLOUD_PASSWORD: "${{ secrets.HW_REGISTRY_PASSWORD }}" # 华为云用户密码

jobs:
  build:
    name: Push to HuaweiCloud
    runs-on: ubuntu-latest
    steps:
    - name: Free up disk space
      run: |
        echo "Initial disk status:"
        df -hT

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 128
        remove-dotnet: 'true'

    - name: Restart docker
      run: sudo service docker restart

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to HuaweiCloud SWR
      run: |
        docker login -u "$HUAWEICLOUD_USER" -p $HUAWEICLOUD_PASSWORD $HUAWEICLOUD_REGISTRY

    - name: Process and push images
      run: |
        while IFS= read -r line || [ -n "$line" ]; do
            [[ -z "$line" || "$line" =~ ^\s*# ]] && continue

            # 提取原始镜像信息并清洗非法字符
            original_image=$(echo "$line" | awk '{print $NF}' | sed 's/@sha256.*//; s/[^a-zA-Z0-9._/-]//g')
            image_name_tag=$(basename "$original_image" | sed 's/[^a-zA-Z0-9._-]/_/g')
            namespace=$(dirname "$original_image" | sed 's/[^a-zA-Z0-9._-]/_/g; s/^_*//; s/_*$//')

            # 生成华为云镜像路径（确保路径合法）
            target_image="$HUAWEICLOUD_REGISTRY/$HUAWEICLOUD_ORG_NAME/${namespace}_${image_name_tag}"

            # 输出调试信息
            echo "Processing: Original=$original_image → Target=$target_image"

            # 拉取、标记、推送
            docker pull "$original_image"
            docker tag "$original_image" "$target_image"
            docker push "$target_image"

            # 清理
            docker rmi "$original_image" "$target_image"
        done < images.txt

        echo "Final disk status:"
        df -hT
